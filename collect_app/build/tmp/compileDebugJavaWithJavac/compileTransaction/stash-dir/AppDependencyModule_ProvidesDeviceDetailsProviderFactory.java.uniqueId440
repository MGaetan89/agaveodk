// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.injection.config;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.odk.collect.android.metadata.InstallIDProvider;
import org.odk.collect.android.utilities.DeviceDetailsProvider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppDependencyModule_ProvidesDeviceDetailsProviderFactory implements Factory<DeviceDetailsProvider> {
  private final AppDependencyModule module;

  private final Provider<Context> contextProvider;

  private final Provider<InstallIDProvider> installIDProvider;

  public AppDependencyModule_ProvidesDeviceDetailsProviderFactory(AppDependencyModule module,
      Provider<Context> contextProvider, Provider<InstallIDProvider> installIDProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.installIDProvider = installIDProvider;
  }

  @Override
  public DeviceDetailsProvider get() {
    return providesDeviceDetailsProvider(module, contextProvider.get(), installIDProvider.get());
  }

  public static AppDependencyModule_ProvidesDeviceDetailsProviderFactory create(
      AppDependencyModule module, Provider<Context> contextProvider,
      Provider<InstallIDProvider> installIDProvider) {
    return new AppDependencyModule_ProvidesDeviceDetailsProviderFactory(module, contextProvider, installIDProvider);
  }

  public static DeviceDetailsProvider providesDeviceDetailsProvider(AppDependencyModule instance,
      Context context, InstallIDProvider installIDProvider) {
    return Preconditions.checkNotNullFromProvides(instance.providesDeviceDetailsProvider(context, installIDProvider));
  }
}
