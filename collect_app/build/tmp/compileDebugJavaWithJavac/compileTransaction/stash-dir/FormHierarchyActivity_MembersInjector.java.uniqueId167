// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.activities;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;
import org.odk.collect.analytics.Analytics;
import org.odk.collect.android.entities.EntitiesRepositoryProvider;
import org.odk.collect.android.formentry.FormSessionRepository;
import org.odk.collect.android.projects.CurrentProjectProvider;
import org.odk.collect.android.utilities.MediaUtils;
import org.odk.collect.async.Scheduler;
import org.odk.collect.audiorecorder.recording.AudioRecorder;
import org.odk.collect.location.LocationClient;
import org.odk.collect.permissions.PermissionsChecker;
import org.odk.collect.permissions.PermissionsProvider;
import org.odk.collect.settings.SettingsProvider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FormHierarchyActivity_MembersInjector implements MembersInjector<FormHierarchyActivity> {
  private final Provider<Scheduler> schedulerProvider;

  private final Provider<FormSessionRepository> formSessionRepositoryProvider;

  private final Provider<MediaUtils> mediaUtilsProvider;

  private final Provider<Analytics> analyticsProvider;

  private final Provider<AudioRecorder> audioRecorderProvider;

  private final Provider<CurrentProjectProvider> currentProjectProvider;

  private final Provider<EntitiesRepositoryProvider> entitiesRepositoryProvider;

  private final Provider<PermissionsChecker> permissionsCheckerProvider;

  private final Provider<LocationClient> fusedLocationClientProvider;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<PermissionsProvider> permissionsProvider;

  public FormHierarchyActivity_MembersInjector(Provider<Scheduler> schedulerProvider,
      Provider<FormSessionRepository> formSessionRepositoryProvider,
      Provider<MediaUtils> mediaUtilsProvider, Provider<Analytics> analyticsProvider,
      Provider<AudioRecorder> audioRecorderProvider,
      Provider<CurrentProjectProvider> currentProjectProvider,
      Provider<EntitiesRepositoryProvider> entitiesRepositoryProvider,
      Provider<PermissionsChecker> permissionsCheckerProvider,
      Provider<LocationClient> fusedLocationClientProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<PermissionsProvider> permissionsProvider) {
    this.schedulerProvider = schedulerProvider;
    this.formSessionRepositoryProvider = formSessionRepositoryProvider;
    this.mediaUtilsProvider = mediaUtilsProvider;
    this.analyticsProvider = analyticsProvider;
    this.audioRecorderProvider = audioRecorderProvider;
    this.currentProjectProvider = currentProjectProvider;
    this.entitiesRepositoryProvider = entitiesRepositoryProvider;
    this.permissionsCheckerProvider = permissionsCheckerProvider;
    this.fusedLocationClientProvider = fusedLocationClientProvider;
    this.settingsProvider = settingsProvider;
    this.permissionsProvider = permissionsProvider;
  }

  public static MembersInjector<FormHierarchyActivity> create(Provider<Scheduler> schedulerProvider,
      Provider<FormSessionRepository> formSessionRepositoryProvider,
      Provider<MediaUtils> mediaUtilsProvider, Provider<Analytics> analyticsProvider,
      Provider<AudioRecorder> audioRecorderProvider,
      Provider<CurrentProjectProvider> currentProjectProvider,
      Provider<EntitiesRepositoryProvider> entitiesRepositoryProvider,
      Provider<PermissionsChecker> permissionsCheckerProvider,
      Provider<LocationClient> fusedLocationClientProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<PermissionsProvider> permissionsProvider) {
    return new FormHierarchyActivity_MembersInjector(schedulerProvider, formSessionRepositoryProvider, mediaUtilsProvider, analyticsProvider, audioRecorderProvider, currentProjectProvider, entitiesRepositoryProvider, permissionsCheckerProvider, fusedLocationClientProvider, settingsProvider, permissionsProvider);
  }

  @Override
  public void injectMembers(FormHierarchyActivity instance) {
    injectScheduler(instance, schedulerProvider.get());
    injectFormSessionRepository(instance, formSessionRepositoryProvider.get());
    injectMediaUtils(instance, mediaUtilsProvider.get());
    injectAnalytics(instance, analyticsProvider.get());
    injectAudioRecorder(instance, audioRecorderProvider.get());
    injectCurrentProjectProvider(instance, currentProjectProvider.get());
    injectEntitiesRepositoryProvider(instance, entitiesRepositoryProvider.get());
    injectPermissionsChecker(instance, permissionsCheckerProvider.get());
    injectFusedLocationClient(instance, fusedLocationClientProvider.get());
    injectSettingsProvider(instance, settingsProvider.get());
    injectPermissionsProvider(instance, permissionsProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.scheduler")
  public static void injectScheduler(FormHierarchyActivity instance, Scheduler scheduler) {
    instance.scheduler = scheduler;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.formSessionRepository")
  public static void injectFormSessionRepository(FormHierarchyActivity instance,
      FormSessionRepository formSessionRepository) {
    instance.formSessionRepository = formSessionRepository;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.mediaUtils")
  public static void injectMediaUtils(FormHierarchyActivity instance, MediaUtils mediaUtils) {
    instance.mediaUtils = mediaUtils;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.analytics")
  public static void injectAnalytics(FormHierarchyActivity instance, Analytics analytics) {
    instance.analytics = analytics;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.audioRecorder")
  public static void injectAudioRecorder(FormHierarchyActivity instance,
      AudioRecorder audioRecorder) {
    instance.audioRecorder = audioRecorder;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.currentProjectProvider")
  public static void injectCurrentProjectProvider(FormHierarchyActivity instance,
      CurrentProjectProvider currentProjectProvider) {
    instance.currentProjectProvider = currentProjectProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.entitiesRepositoryProvider")
  public static void injectEntitiesRepositoryProvider(FormHierarchyActivity instance,
      EntitiesRepositoryProvider entitiesRepositoryProvider) {
    instance.entitiesRepositoryProvider = entitiesRepositoryProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.permissionsChecker")
  public static void injectPermissionsChecker(FormHierarchyActivity instance,
      PermissionsChecker permissionsChecker) {
    instance.permissionsChecker = permissionsChecker;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.fusedLocationClient")
  public static void injectFusedLocationClient(FormHierarchyActivity instance,
      LocationClient fusedLocationClient) {
    instance.fusedLocationClient = fusedLocationClient;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.settingsProvider")
  public static void injectSettingsProvider(FormHierarchyActivity instance,
      SettingsProvider settingsProvider) {
    instance.settingsProvider = settingsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormHierarchyActivity.permissionsProvider")
  public static void injectPermissionsProvider(FormHierarchyActivity instance,
      PermissionsProvider permissionsProvider) {
    instance.permissionsProvider = permissionsProvider;
  }
}
