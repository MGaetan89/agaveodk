// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.injection.config;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.odk.collect.android.formmanagement.FormDownloader;
import org.odk.collect.android.formmanagement.FormSourceProvider;
import org.odk.collect.android.storage.StoragePathProvider;
import org.odk.collect.android.utilities.FormsRepositoryProvider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppDependencyModule_ProvidesFormDownloaderFactory implements Factory<FormDownloader> {
  private final AppDependencyModule module;

  private final Provider<FormSourceProvider> formSourceProvider;

  private final Provider<FormsRepositoryProvider> formsRepositoryProvider;

  private final Provider<StoragePathProvider> storagePathProvider;

  public AppDependencyModule_ProvidesFormDownloaderFactory(AppDependencyModule module,
      Provider<FormSourceProvider> formSourceProvider,
      Provider<FormsRepositoryProvider> formsRepositoryProvider,
      Provider<StoragePathProvider> storagePathProvider) {
    this.module = module;
    this.formSourceProvider = formSourceProvider;
    this.formsRepositoryProvider = formsRepositoryProvider;
    this.storagePathProvider = storagePathProvider;
  }

  @Override
  public FormDownloader get() {
    return providesFormDownloader(module, formSourceProvider.get(), formsRepositoryProvider.get(), storagePathProvider.get());
  }

  public static AppDependencyModule_ProvidesFormDownloaderFactory create(AppDependencyModule module,
      Provider<FormSourceProvider> formSourceProvider,
      Provider<FormsRepositoryProvider> formsRepositoryProvider,
      Provider<StoragePathProvider> storagePathProvider) {
    return new AppDependencyModule_ProvidesFormDownloaderFactory(module, formSourceProvider, formsRepositoryProvider, storagePathProvider);
  }

  public static FormDownloader providesFormDownloader(AppDependencyModule instance,
      FormSourceProvider formSourceProvider, FormsRepositoryProvider formsRepositoryProvider,
      StoragePathProvider storagePathProvider) {
    return Preconditions.checkNotNullFromProvides(instance.providesFormDownloader(formSourceProvider, formsRepositoryProvider, storagePathProvider));
  }
}
