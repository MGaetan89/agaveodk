// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;
import org.odk.collect.android.projects.ProjectListItemView;
import org.odk.collect.androidshared.ui.multiclicksafe.MultiClickSafeButton;

public final class ProjectSettingsDialogLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MultiClickSafeButton aboutButton;

  @NonNull
  public final MultiClickSafeButton addProjectButton;

  @NonNull
  public final View bottomDivider;

  @NonNull
  public final ImageView closeIcon;

  @NonNull
  public final ProjectListItemView currentProject;

  @NonNull
  public final MultiClickSafeButton generalSettingsButton;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final LinearLayout projectList;

  @NonNull
  public final ScrollView projectListContainer;

  @NonNull
  public final TextView title;

  @NonNull
  public final View topDivider;

  private ProjectSettingsDialogLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull MultiClickSafeButton aboutButton, @NonNull MultiClickSafeButton addProjectButton,
      @NonNull View bottomDivider, @NonNull ImageView closeIcon,
      @NonNull ProjectListItemView currentProject,
      @NonNull MultiClickSafeButton generalSettingsButton, @NonNull Guideline guidelineEnd,
      @NonNull Guideline guidelineStart, @NonNull LinearLayout projectList,
      @NonNull ScrollView projectListContainer, @NonNull TextView title, @NonNull View topDivider) {
    this.rootView = rootView;
    this.aboutButton = aboutButton;
    this.addProjectButton = addProjectButton;
    this.bottomDivider = bottomDivider;
    this.closeIcon = closeIcon;
    this.currentProject = currentProject;
    this.generalSettingsButton = generalSettingsButton;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.projectList = projectList;
    this.projectListContainer = projectListContainer;
    this.title = title;
    this.topDivider = topDivider;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProjectSettingsDialogLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProjectSettingsDialogLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.project_settings_dialog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProjectSettingsDialogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_button;
      MultiClickSafeButton aboutButton = ViewBindings.findChildViewById(rootView, id);
      if (aboutButton == null) {
        break missingId;
      }

      id = R.id.add_project_button;
      MultiClickSafeButton addProjectButton = ViewBindings.findChildViewById(rootView, id);
      if (addProjectButton == null) {
        break missingId;
      }

      id = R.id.bottom_divider;
      View bottomDivider = ViewBindings.findChildViewById(rootView, id);
      if (bottomDivider == null) {
        break missingId;
      }

      id = R.id.close_icon;
      ImageView closeIcon = ViewBindings.findChildViewById(rootView, id);
      if (closeIcon == null) {
        break missingId;
      }

      id = R.id.current_project;
      ProjectListItemView currentProject = ViewBindings.findChildViewById(rootView, id);
      if (currentProject == null) {
        break missingId;
      }

      id = R.id.general_settings_button;
      MultiClickSafeButton generalSettingsButton = ViewBindings.findChildViewById(rootView, id);
      if (generalSettingsButton == null) {
        break missingId;
      }

      id = R.id.guideline_end;
      Guideline guidelineEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guideline_start;
      Guideline guidelineStart = ViewBindings.findChildViewById(rootView, id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.project_list;
      LinearLayout projectList = ViewBindings.findChildViewById(rootView, id);
      if (projectList == null) {
        break missingId;
      }

      id = R.id.project_list_container;
      ScrollView projectListContainer = ViewBindings.findChildViewById(rootView, id);
      if (projectListContainer == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.top_divider;
      View topDivider = ViewBindings.findChildViewById(rootView, id);
      if (topDivider == null) {
        break missingId;
      }

      return new ProjectSettingsDialogLayoutBinding((ConstraintLayout) rootView, aboutButton,
          addProjectButton, bottomDivider, closeIcon, currentProject, generalSettingsButton,
          guidelineEnd, guidelineStart, projectList, projectListContainer, title, topDivider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
