// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckBox;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;

public final class ResetDialogLayoutBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AppCompatCheckBox cache;

  @NonNull
  public final AppCompatCheckBox forms;

  @NonNull
  public final AppCompatCheckBox instances;

  @NonNull
  public final AppCompatCheckBox layers;

  @NonNull
  public final AppCompatCheckBox preferences;

  private ResetDialogLayoutBinding(@NonNull ScrollView rootView, @NonNull AppCompatCheckBox cache,
      @NonNull AppCompatCheckBox forms, @NonNull AppCompatCheckBox instances,
      @NonNull AppCompatCheckBox layers, @NonNull AppCompatCheckBox preferences) {
    this.rootView = rootView;
    this.cache = cache;
    this.forms = forms;
    this.instances = instances;
    this.layers = layers;
    this.preferences = preferences;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ResetDialogLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ResetDialogLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reset_dialog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ResetDialogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cache;
      AppCompatCheckBox cache = ViewBindings.findChildViewById(rootView, id);
      if (cache == null) {
        break missingId;
      }

      id = R.id.forms;
      AppCompatCheckBox forms = ViewBindings.findChildViewById(rootView, id);
      if (forms == null) {
        break missingId;
      }

      id = R.id.instances;
      AppCompatCheckBox instances = ViewBindings.findChildViewById(rootView, id);
      if (instances == null) {
        break missingId;
      }

      id = R.id.layers;
      AppCompatCheckBox layers = ViewBindings.findChildViewById(rootView, id);
      if (layers == null) {
        break missingId;
      }

      id = R.id.preferences;
      AppCompatCheckBox preferences = ViewBindings.findChildViewById(rootView, id);
      if (preferences == null) {
        break missingId;
      }

      return new ResetDialogLayoutBinding((ScrollView) rootView, cache, forms, instances, layers,
          preferences);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
