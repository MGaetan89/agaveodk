// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;
import org.odk.collect.androidshared.ui.multiclicksafe.MultiClickSafeButton;

public final class ManualProjectCreatorDialogLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MultiClickSafeButton addButton;

  @NonNull
  public final AppBarLayout addProjectToolbar;

  @NonNull
  public final MultiClickSafeButton cancelButton;

  @NonNull
  public final ConstraintLayout configTip;

  @NonNull
  public final TextInputLayout password;

  @NonNull
  public final TextInputEditText passwordInputText;

  @NonNull
  public final ImageView shadowUp;

  @NonNull
  public final ImageView tipIcon;

  @NonNull
  public final TextView tipText;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextInputLayout url;

  @NonNull
  public final TextInputEditText urlInputText;

  @NonNull
  public final TextInputLayout username;

  @NonNull
  public final TextInputEditText usernameInputText;

  private ManualProjectCreatorDialogLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull MultiClickSafeButton addButton, @NonNull AppBarLayout addProjectToolbar,
      @NonNull MultiClickSafeButton cancelButton, @NonNull ConstraintLayout configTip,
      @NonNull TextInputLayout password, @NonNull TextInputEditText passwordInputText,
      @NonNull ImageView shadowUp, @NonNull ImageView tipIcon, @NonNull TextView tipText,
      @NonNull MaterialToolbar toolbar, @NonNull TextInputLayout url,
      @NonNull TextInputEditText urlInputText, @NonNull TextInputLayout username,
      @NonNull TextInputEditText usernameInputText) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.addProjectToolbar = addProjectToolbar;
    this.cancelButton = cancelButton;
    this.configTip = configTip;
    this.password = password;
    this.passwordInputText = passwordInputText;
    this.shadowUp = shadowUp;
    this.tipIcon = tipIcon;
    this.tipText = tipText;
    this.toolbar = toolbar;
    this.url = url;
    this.urlInputText = urlInputText;
    this.username = username;
    this.usernameInputText = usernameInputText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ManualProjectCreatorDialogLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ManualProjectCreatorDialogLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.manual_project_creator_dialog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ManualProjectCreatorDialogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_button;
      MultiClickSafeButton addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.add_project_toolbar;
      AppBarLayout addProjectToolbar = ViewBindings.findChildViewById(rootView, id);
      if (addProjectToolbar == null) {
        break missingId;
      }

      id = R.id.cancel_button;
      MultiClickSafeButton cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.config_tip;
      ConstraintLayout configTip = ViewBindings.findChildViewById(rootView, id);
      if (configTip == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputLayout password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.password_input_text;
      TextInputEditText passwordInputText = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputText == null) {
        break missingId;
      }

      id = R.id.shadow_up;
      ImageView shadowUp = ViewBindings.findChildViewById(rootView, id);
      if (shadowUp == null) {
        break missingId;
      }

      id = R.id.tip_icon;
      ImageView tipIcon = ViewBindings.findChildViewById(rootView, id);
      if (tipIcon == null) {
        break missingId;
      }

      id = R.id.tip_text;
      TextView tipText = ViewBindings.findChildViewById(rootView, id);
      if (tipText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.url;
      TextInputLayout url = ViewBindings.findChildViewById(rootView, id);
      if (url == null) {
        break missingId;
      }

      id = R.id.url_input_text;
      TextInputEditText urlInputText = ViewBindings.findChildViewById(rootView, id);
      if (urlInputText == null) {
        break missingId;
      }

      id = R.id.username;
      TextInputLayout username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.username_input_text;
      TextInputEditText usernameInputText = ViewBindings.findChildViewById(rootView, id);
      if (usernameInputText == null) {
        break missingId;
      }

      return new ManualProjectCreatorDialogLayoutBinding((ConstraintLayout) rootView, addButton,
          addProjectToolbar, cancelButton, configTip, password, passwordInputText, shadowUp,
          tipIcon, tipText, toolbar, url, urlInputText, username, usernameInputText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
