// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;

public final class NamedViewIdsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View answerText;

  @NonNull
  public final View captureAudio;

  @NonNull
  public final View captureImage;

  @NonNull
  public final View captureVideo;

  @NonNull
  public final View chooseImage;

  @NonNull
  public final View chooseSound;

  @NonNull
  public final View chooseVideo;

  @NonNull
  public final View markupImage;

  @NonNull
  public final View playVideo;

  @NonNull
  public final View simpleButton;

  private NamedViewIdsBinding(@NonNull LinearLayout rootView, @NonNull View answerText,
      @NonNull View captureAudio, @NonNull View captureImage, @NonNull View captureVideo,
      @NonNull View chooseImage, @NonNull View chooseSound, @NonNull View chooseVideo,
      @NonNull View markupImage, @NonNull View playVideo, @NonNull View simpleButton) {
    this.rootView = rootView;
    this.answerText = answerText;
    this.captureAudio = captureAudio;
    this.captureImage = captureImage;
    this.captureVideo = captureVideo;
    this.chooseImage = chooseImage;
    this.chooseSound = chooseSound;
    this.chooseVideo = chooseVideo;
    this.markupImage = markupImage;
    this.playVideo = playVideo;
    this.simpleButton = simpleButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NamedViewIdsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NamedViewIdsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.named_view_ids, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NamedViewIdsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answer_text;
      View answerText = ViewBindings.findChildViewById(rootView, id);
      if (answerText == null) {
        break missingId;
      }

      id = R.id.capture_audio;
      View captureAudio = ViewBindings.findChildViewById(rootView, id);
      if (captureAudio == null) {
        break missingId;
      }

      id = R.id.capture_image;
      View captureImage = ViewBindings.findChildViewById(rootView, id);
      if (captureImage == null) {
        break missingId;
      }

      id = R.id.capture_video;
      View captureVideo = ViewBindings.findChildViewById(rootView, id);
      if (captureVideo == null) {
        break missingId;
      }

      id = R.id.choose_image;
      View chooseImage = ViewBindings.findChildViewById(rootView, id);
      if (chooseImage == null) {
        break missingId;
      }

      id = R.id.choose_sound;
      View chooseSound = ViewBindings.findChildViewById(rootView, id);
      if (chooseSound == null) {
        break missingId;
      }

      id = R.id.choose_video;
      View chooseVideo = ViewBindings.findChildViewById(rootView, id);
      if (chooseVideo == null) {
        break missingId;
      }

      id = R.id.markup_image;
      View markupImage = ViewBindings.findChildViewById(rootView, id);
      if (markupImage == null) {
        break missingId;
      }

      id = R.id.play_video;
      View playVideo = ViewBindings.findChildViewById(rootView, id);
      if (playVideo == null) {
        break missingId;
      }

      id = R.id.simple_button;
      View simpleButton = ViewBindings.findChildViewById(rootView, id);
      if (simpleButton == null) {
        break missingId;
      }

      return new NamedViewIdsBinding((LinearLayout) rootView, answerText, captureAudio,
          captureImage, captureVideo, chooseImage, chooseSound, chooseVideo, markupImage, playVideo,
          simpleButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
