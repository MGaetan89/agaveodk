// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;

public final class AudioControllerLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView currentDuration;

  @NonNull
  public final MaterialButton play;

  @NonNull
  public final MaterialButton remove;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final TextView totalDuration;

  private AudioControllerLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView currentDuration, @NonNull MaterialButton play,
      @NonNull MaterialButton remove, @NonNull SeekBar seekBar, @NonNull TextView totalDuration) {
    this.rootView = rootView;
    this.currentDuration = currentDuration;
    this.play = play;
    this.remove = remove;
    this.seekBar = seekBar;
    this.totalDuration = totalDuration;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AudioControllerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AudioControllerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.audio_controller_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AudioControllerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currentDuration;
      TextView currentDuration = ViewBindings.findChildViewById(rootView, id);
      if (currentDuration == null) {
        break missingId;
      }

      id = R.id.play;
      MaterialButton play = ViewBindings.findChildViewById(rootView, id);
      if (play == null) {
        break missingId;
      }

      id = R.id.remove;
      MaterialButton remove = ViewBindings.findChildViewById(rootView, id);
      if (remove == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.totalDuration;
      TextView totalDuration = ViewBindings.findChildViewById(rootView, id);
      if (totalDuration == null) {
        break missingId;
      }

      return new AudioControllerLayoutBinding((LinearLayout) rootView, currentDuration, play,
          remove, seekBar, totalDuration);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
