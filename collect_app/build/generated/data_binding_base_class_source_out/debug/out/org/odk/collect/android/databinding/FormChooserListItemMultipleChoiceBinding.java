// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;
import org.odk.collect.android.views.TwoItemMultipleChoiceView;

public final class FormChooserListItemMultipleChoiceBinding implements ViewBinding {
  @NonNull
  private final TwoItemMultipleChoiceView rootView;

  @NonNull
  public final CheckBox checkbox;

  @NonNull
  public final ImageView closeBox;

  @NonNull
  public final FrameLayout imageView;

  @NonNull
  public final FrameLayout selectView;

  private FormChooserListItemMultipleChoiceBinding(@NonNull TwoItemMultipleChoiceView rootView,
      @NonNull CheckBox checkbox, @NonNull ImageView closeBox, @NonNull FrameLayout imageView,
      @NonNull FrameLayout selectView) {
    this.rootView = rootView;
    this.checkbox = checkbox;
    this.closeBox = closeBox;
    this.imageView = imageView;
    this.selectView = selectView;
  }

  @Override
  @NonNull
  public TwoItemMultipleChoiceView getRoot() {
    return rootView;
  }

  @NonNull
  public static FormChooserListItemMultipleChoiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FormChooserListItemMultipleChoiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.form_chooser_list_item_multiple_choice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FormChooserListItemMultipleChoiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkbox;
      CheckBox checkbox = ViewBindings.findChildViewById(rootView, id);
      if (checkbox == null) {
        break missingId;
      }

      id = R.id.close_box;
      ImageView closeBox = ViewBindings.findChildViewById(rootView, id);
      if (closeBox == null) {
        break missingId;
      }

      id = R.id.imageView;
      FrameLayout imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.selectView;
      FrameLayout selectView = ViewBindings.findChildViewById(rootView, id);
      if (selectView == null) {
        break missingId;
      }

      return new FormChooserListItemMultipleChoiceBinding((TwoItemMultipleChoiceView) rootView,
          checkbox, closeBox, imageView, selectView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
