// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;
import org.odk.collect.android.audio.AudioControllerView;
import org.odk.collect.android.audio.Waveform;

public final class AudioPlayerLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AudioControllerView audioController;

  @NonNull
  public final TextView recordingDuration;

  @NonNull
  public final Waveform waveform;

  private AudioPlayerLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull AudioControllerView audioController, @NonNull TextView recordingDuration,
      @NonNull Waveform waveform) {
    this.rootView = rootView;
    this.audioController = audioController;
    this.recordingDuration = recordingDuration;
    this.waveform = waveform;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AudioPlayerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AudioPlayerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.audio_player_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AudioPlayerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_controller;
      AudioControllerView audioController = ViewBindings.findChildViewById(rootView, id);
      if (audioController == null) {
        break missingId;
      }

      id = R.id.recording_duration;
      TextView recordingDuration = ViewBindings.findChildViewById(rootView, id);
      if (recordingDuration == null) {
        break missingId;
      }

      id = R.id.waveform;
      Waveform waveform = ViewBindings.findChildViewById(rootView, id);
      if (waveform == null) {
        break missingId;
      }

      return new AudioPlayerLayoutBinding((LinearLayout) rootView, audioController,
          recordingDuration, waveform);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
