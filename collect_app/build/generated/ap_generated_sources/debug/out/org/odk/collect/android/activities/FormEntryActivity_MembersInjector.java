// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.activities;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Named;
import javax.inject.Provider;
import org.odk.collect.android.backgroundwork.InstanceSubmitScheduler;
import org.odk.collect.android.entities.EntitiesRepositoryProvider;
import org.odk.collect.android.formentry.FormSessionRepository;
import org.odk.collect.android.formentry.media.AudioHelperFactory;
import org.odk.collect.android.logic.PropertyManager;
import org.odk.collect.android.projects.CurrentProjectProvider;
import org.odk.collect.android.storage.StoragePathProvider;
import org.odk.collect.android.utilities.ExternalAppIntentProvider;
import org.odk.collect.android.utilities.FormsRepositoryProvider;
import org.odk.collect.android.utilities.MediaUtils;
import org.odk.collect.android.utilities.SoftKeyboardController;
import org.odk.collect.androidshared.system.IntentLauncher;
import org.odk.collect.async.Scheduler;
import org.odk.collect.audiorecorder.recording.AudioRecorder;
import org.odk.collect.location.LocationClient;
import org.odk.collect.permissions.PermissionsChecker;
import org.odk.collect.permissions.PermissionsProvider;
import org.odk.collect.settings.SettingsProvider;

@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FormEntryActivity_MembersInjector implements MembersInjector<FormEntryActivity> {
  private final Provider<StoragePathProvider> storagePathProvider;

  private final Provider<FormsRepositoryProvider> formsRepositoryProvider;

  private final Provider<PropertyManager> propertyManagerProvider;

  private final Provider<InstanceSubmitScheduler> instanceSubmitSchedulerProvider;

  private final Provider<Scheduler> schedulerProvider;

  private final Provider<AudioRecorder> audioRecorderProvider;

  private final Provider<SoftKeyboardController> softKeyboardControllerProvider;

  private final Provider<PermissionsChecker> permissionsCheckerProvider;

  private final Provider<ExternalAppIntentProvider> externalAppIntentProvider;

  private final Provider<CurrentProjectProvider> currentProjectProvider;

  private final Provider<IntentLauncher> intentLauncherProvider;

  private final Provider<FormSessionRepository> formSessionRepositoryProvider;

  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<MediaUtils> mediaUtilsProvider;

  private final Provider<EntitiesRepositoryProvider> entitiesRepositoryProvider;

  private final Provider<LocationClient> fusedLocatonClientProvider;

  private final Provider<AudioHelperFactory> audioHelperFactoryProvider;

  public FormEntryActivity_MembersInjector(Provider<StoragePathProvider> storagePathProvider,
      Provider<FormsRepositoryProvider> formsRepositoryProvider,
      Provider<PropertyManager> propertyManagerProvider,
      Provider<InstanceSubmitScheduler> instanceSubmitSchedulerProvider,
      Provider<Scheduler> schedulerProvider, Provider<AudioRecorder> audioRecorderProvider,
      Provider<SoftKeyboardController> softKeyboardControllerProvider,
      Provider<PermissionsChecker> permissionsCheckerProvider,
      Provider<ExternalAppIntentProvider> externalAppIntentProvider,
      Provider<CurrentProjectProvider> currentProjectProvider,
      Provider<IntentLauncher> intentLauncherProvider,
      Provider<FormSessionRepository> formSessionRepositoryProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider, Provider<MediaUtils> mediaUtilsProvider,
      Provider<EntitiesRepositoryProvider> entitiesRepositoryProvider,
      Provider<LocationClient> fusedLocatonClientProvider,
      Provider<AudioHelperFactory> audioHelperFactoryProvider) {
    this.storagePathProvider = storagePathProvider;
    this.formsRepositoryProvider = formsRepositoryProvider;
    this.propertyManagerProvider = propertyManagerProvider;
    this.instanceSubmitSchedulerProvider = instanceSubmitSchedulerProvider;
    this.schedulerProvider = schedulerProvider;
    this.audioRecorderProvider = audioRecorderProvider;
    this.softKeyboardControllerProvider = softKeyboardControllerProvider;
    this.permissionsCheckerProvider = permissionsCheckerProvider;
    this.externalAppIntentProvider = externalAppIntentProvider;
    this.currentProjectProvider = currentProjectProvider;
    this.intentLauncherProvider = intentLauncherProvider;
    this.formSessionRepositoryProvider = formSessionRepositoryProvider;
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
    this.mediaUtilsProvider = mediaUtilsProvider;
    this.entitiesRepositoryProvider = entitiesRepositoryProvider;
    this.fusedLocatonClientProvider = fusedLocatonClientProvider;
    this.audioHelperFactoryProvider = audioHelperFactoryProvider;
  }

  public static MembersInjector<FormEntryActivity> create(
      Provider<StoragePathProvider> storagePathProvider,
      Provider<FormsRepositoryProvider> formsRepositoryProvider,
      Provider<PropertyManager> propertyManagerProvider,
      Provider<InstanceSubmitScheduler> instanceSubmitSchedulerProvider,
      Provider<Scheduler> schedulerProvider, Provider<AudioRecorder> audioRecorderProvider,
      Provider<SoftKeyboardController> softKeyboardControllerProvider,
      Provider<PermissionsChecker> permissionsCheckerProvider,
      Provider<ExternalAppIntentProvider> externalAppIntentProvider,
      Provider<CurrentProjectProvider> currentProjectProvider,
      Provider<IntentLauncher> intentLauncherProvider,
      Provider<FormSessionRepository> formSessionRepositoryProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider, Provider<MediaUtils> mediaUtilsProvider,
      Provider<EntitiesRepositoryProvider> entitiesRepositoryProvider,
      Provider<LocationClient> fusedLocatonClientProvider,
      Provider<AudioHelperFactory> audioHelperFactoryProvider) {
    return new FormEntryActivity_MembersInjector(storagePathProvider, formsRepositoryProvider, propertyManagerProvider, instanceSubmitSchedulerProvider, schedulerProvider, audioRecorderProvider, softKeyboardControllerProvider, permissionsCheckerProvider, externalAppIntentProvider, currentProjectProvider, intentLauncherProvider, formSessionRepositoryProvider, permissionsProvider, settingsProvider, mediaUtilsProvider, entitiesRepositoryProvider, fusedLocatonClientProvider, audioHelperFactoryProvider);
  }

  @Override
  public void injectMembers(FormEntryActivity instance) {
    injectStoragePathProvider(instance, storagePathProvider.get());
    injectFormsRepositoryProvider(instance, formsRepositoryProvider.get());
    injectPropertyManager(instance, propertyManagerProvider.get());
    injectInstanceSubmitScheduler(instance, instanceSubmitSchedulerProvider.get());
    injectScheduler(instance, schedulerProvider.get());
    injectAudioRecorder(instance, audioRecorderProvider.get());
    injectSoftKeyboardController(instance, softKeyboardControllerProvider.get());
    injectPermissionsChecker(instance, permissionsCheckerProvider.get());
    injectExternalAppIntentProvider(instance, externalAppIntentProvider.get());
    injectCurrentProjectProvider(instance, currentProjectProvider.get());
    injectIntentLauncher(instance, intentLauncherProvider.get());
    injectFormSessionRepository(instance, formSessionRepositoryProvider.get());
    injectPermissionsProvider(instance, permissionsProvider.get());
    injectSettingsProvider(instance, settingsProvider.get());
    injectMediaUtils(instance, mediaUtilsProvider.get());
    injectEntitiesRepositoryProvider(instance, entitiesRepositoryProvider.get());
    injectFusedLocatonClient(instance, fusedLocatonClientProvider.get());
    injectAudioHelperFactory(instance, audioHelperFactoryProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.storagePathProvider")
  public static void injectStoragePathProvider(FormEntryActivity instance,
      StoragePathProvider storagePathProvider) {
    instance.storagePathProvider = storagePathProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.formsRepositoryProvider")
  public static void injectFormsRepositoryProvider(FormEntryActivity instance,
      FormsRepositoryProvider formsRepositoryProvider) {
    instance.formsRepositoryProvider = formsRepositoryProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.propertyManager")
  public static void injectPropertyManager(FormEntryActivity instance,
      PropertyManager propertyManager) {
    instance.propertyManager = propertyManager;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.instanceSubmitScheduler")
  public static void injectInstanceSubmitScheduler(FormEntryActivity instance,
      InstanceSubmitScheduler instanceSubmitScheduler) {
    instance.instanceSubmitScheduler = instanceSubmitScheduler;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.scheduler")
  public static void injectScheduler(FormEntryActivity instance, Scheduler scheduler) {
    instance.scheduler = scheduler;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.audioRecorder")
  public static void injectAudioRecorder(FormEntryActivity instance, AudioRecorder audioRecorder) {
    instance.audioRecorder = audioRecorder;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.softKeyboardController")
  public static void injectSoftKeyboardController(FormEntryActivity instance,
      SoftKeyboardController softKeyboardController) {
    instance.softKeyboardController = softKeyboardController;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.permissionsChecker")
  public static void injectPermissionsChecker(FormEntryActivity instance,
      PermissionsChecker permissionsChecker) {
    instance.permissionsChecker = permissionsChecker;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.externalAppIntentProvider")
  public static void injectExternalAppIntentProvider(FormEntryActivity instance,
      ExternalAppIntentProvider externalAppIntentProvider) {
    instance.externalAppIntentProvider = externalAppIntentProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.currentProjectProvider")
  public static void injectCurrentProjectProvider(FormEntryActivity instance,
      CurrentProjectProvider currentProjectProvider) {
    instance.currentProjectProvider = currentProjectProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.intentLauncher")
  public static void injectIntentLauncher(FormEntryActivity instance,
      IntentLauncher intentLauncher) {
    instance.intentLauncher = intentLauncher;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.formSessionRepository")
  public static void injectFormSessionRepository(FormEntryActivity instance,
      FormSessionRepository formSessionRepository) {
    instance.formSessionRepository = formSessionRepository;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.permissionsProvider")
  public static void injectPermissionsProvider(FormEntryActivity instance,
      PermissionsProvider permissionsProvider) {
    instance.permissionsProvider = permissionsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.settingsProvider")
  public static void injectSettingsProvider(FormEntryActivity instance,
      SettingsProvider settingsProvider) {
    instance.settingsProvider = settingsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.mediaUtils")
  public static void injectMediaUtils(FormEntryActivity instance, MediaUtils mediaUtils) {
    instance.mediaUtils = mediaUtils;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.entitiesRepositoryProvider")
  public static void injectEntitiesRepositoryProvider(FormEntryActivity instance,
      EntitiesRepositoryProvider entitiesRepositoryProvider) {
    instance.entitiesRepositoryProvider = entitiesRepositoryProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.fusedLocatonClient")
  @Named("fused")
  public static void injectFusedLocatonClient(FormEntryActivity instance,
      LocationClient fusedLocatonClient) {
    instance.fusedLocatonClient = fusedLocatonClient;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.FormEntryActivity.audioHelperFactory")
  public static void injectAudioHelperFactory(FormEntryActivity instance,
      AudioHelperFactory audioHelperFactory) {
    instance.audioHelperFactory = audioHelperFactory;
  }
}
