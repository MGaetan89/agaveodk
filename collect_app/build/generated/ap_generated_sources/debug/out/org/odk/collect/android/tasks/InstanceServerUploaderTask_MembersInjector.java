// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.tasks;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;
import org.odk.collect.android.openrosa.OpenRosaHttpInterface;
import org.odk.collect.android.utilities.WebCredentialsUtils;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class InstanceServerUploaderTask_MembersInjector implements MembersInjector<InstanceServerUploaderTask> {
  private final Provider<OpenRosaHttpInterface> httpInterfaceProvider;

  private final Provider<WebCredentialsUtils> webCredentialsUtilsProvider;

  public InstanceServerUploaderTask_MembersInjector(
      Provider<OpenRosaHttpInterface> httpInterfaceProvider,
      Provider<WebCredentialsUtils> webCredentialsUtilsProvider) {
    this.httpInterfaceProvider = httpInterfaceProvider;
    this.webCredentialsUtilsProvider = webCredentialsUtilsProvider;
  }

  public static MembersInjector<InstanceServerUploaderTask> create(
      Provider<OpenRosaHttpInterface> httpInterfaceProvider,
      Provider<WebCredentialsUtils> webCredentialsUtilsProvider) {
    return new InstanceServerUploaderTask_MembersInjector(httpInterfaceProvider, webCredentialsUtilsProvider);
  }

  @Override
  public void injectMembers(InstanceServerUploaderTask instance) {
    injectHttpInterface(instance, httpInterfaceProvider.get());
    injectWebCredentialsUtils(instance, webCredentialsUtilsProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.tasks.InstanceServerUploaderTask.httpInterface")
  public static void injectHttpInterface(InstanceServerUploaderTask instance,
      OpenRosaHttpInterface httpInterface) {
    instance.httpInterface = httpInterface;
  }

  @InjectedFieldSignature("org.odk.collect.android.tasks.InstanceServerUploaderTask.webCredentialsUtils")
  public static void injectWebCredentialsUtils(InstanceServerUploaderTask instance,
      WebCredentialsUtils webCredentialsUtils) {
    instance.webCredentialsUtils = webCredentialsUtils;
  }
}
